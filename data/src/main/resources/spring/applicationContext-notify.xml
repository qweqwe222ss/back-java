<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	    http://www.springframework.org/schema/beans/spring-beans.xsd
	    http://code.alibabatech.com/schema/dubbo
	    http://code.alibabatech.com/schema/dubbo/dubbo.xsd ">

    <bean id="notificationService" class="project.mall.notification.impl.NotificationServiceImpl">
        <property name="hibernateTemplate" ref="hibernateTemplate" />
        <property name="pagedDao" ref="pagedDao" />
    </bean>

    <bean id="notificationTemplateService" class="project.mall.notification.impl.NotificationTemplateServiceImpl">
        <property name="hibernateTemplate" ref="hibernateTemplate" />
    </bean>

    <bean id="commonNotifyManager" class="project.mall.notification.utils.notify.CommonNotifyManager" init-method="init">
        <property name="notificationService" ref="notificationService" />
        <property name="notificationTemplateService" ref="notificationTemplateService" />
    </bean>
    <dubbo:service interface="project.mall.notification.utils.notify.client.CommonNotifyService"
                   ref="commonNotifyManager" />

    <dubbo:reference id="commonNotifyService"
                     interface="project.mall.notification.utils.notify.client.CommonNotifyService" check="false" retries="0"  timeout="3000"/>
    <dubbo:reference id="notificationHelperClient"
                     interface="project.mall.notification.utils.notify.client.NotificationHelperClient" check="false" retries="0" timeout="3000"/>

    <bean id="defaultNotifyHandler" class="project.mall.notification.utils.notify.handler.DefaultNotifyHandler">
        <property name="notificationService" ref="notificationService" />
        <property name="notificationTemplateService" ref="notificationTemplateService" />
    </bean>
    <bean id="defaultEmailNotifyHandler" class="project.mall.notification.utils.notify.handler.DefaultEmailNotifyHandler">
        <property name="notificationService" ref="notificationService" />
        <property name="notificationTemplateService" ref="notificationTemplateService" />
        <property name="emailSendService" ref="emailSendService" />
        <property name="freeMarkerConfigurer" ref="freeMarkerConfigurer" />
    </bean>
    <bean id="smsBaoNotifyHandler" class="project.mall.notification.utils.notify.handler.SmsBaoNotifyHandler">
        <property name="notificationService" ref="notificationService" />
        <property name="notificationTemplateService" ref="notificationTemplateService" />
        <property name="smsSendService" ref="smsSendService" />
    </bean>

    <bean id="notificationHelper"
          class="project.mall.notification.NotificationHelper">
        <property name="commonNotifyManager" ref="commonNotifyManager" />
        <property name="sysparaService" ref="sysparaService" />
        <property name="identifyingCodeTimeWindowService"
                  ref="identifyingCodeTimeWindowService" />
        <property name="blacklistIpTimeWindow"
                  ref="blacklistIpTimeWindow" />
        <property name="sendCountTimeWindow"
                  ref="sendCountTimeWindow" />
        <property name="codeLogService" ref="codeLogService" />
        <property name="redisHandler" ref="redisHandler" />
        <property name="partyService" ref="partyService" />
        <property name="sellerService" ref="sellerService" />
        <property name="notificationService" ref="notificationService" />
    </bean>

    <dubbo:service interface="project.mall.notification.utils.notify.client.NotificationHelperClient"
                   ref="notificationHelper" />

    <bean id="emailSendService" class="email.internal.EmailSendServiceImpl"></bean>

    <bean id="internalEmailSenderService" class="email.internal.InternalEmailSenderServiceImpl" init-method="init">
        <property name="hosts" value="${email.host}"/>
        <property name="ports" value="${email.port}"/>
        <property name="usernames" value="${email.username}"/>
        <property name="froms" value="${email.from}"/>
        <property name="passwords" value="${email.password}"/>
        <property name="mailSender" ref="mailSender" />
        <property name="mailMessage" ref="mailMessage" />
        <property name="freeMarkerConfigurer" ref="freeMarkerConfigurer" />
    </bean>

    <bean id="emailServer" class="email.sender.EmailServer">
        <property name="taskExecutor" ref="emailSendThreadPool" />
        <property name="internalEmailSenderService" ref="internalEmailSenderService" />
    </bean>

    <bean id="emailSendThreadPool" class="kernel.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="2" />
        <property name="keepAliveSeconds" value="60" />
        <property name="maxPoolSize" value="4" />
        <property name="queueCapacity" value="3000" />
        <property name="rejectedExecutionHandler" ref="emailSendThreadRejectExecutingHandler" />
    </bean>

    <bean id="emailSendThreadRejectExecutingHandler" class="kernel.util.RejectExecutionHandlerDelegator">
        <property name="rejectExecutionHandlers">
            <list>
                <bean class="email.sender.OffLineEventRejectExecutingHandler" />
            </list>
        </property>
    </bean>

    <!-- 邮件发送方配置bean -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${email.host}" />
<!--        <property name="port" value="${email.port}" />-->
        <!-- mail account -->
        <property name="username" value="${email.username}" />
        <property name="password" value="${email.password}" />
        <property name="javaMailProperties">
            <props>
                <!--  gmail
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.port">465</prop>
                <prop key="mail.smtp.ssl.enable">true</prop>
                <prop key="mail.debug">true</prop>
                <prop key="mail.smtp.host">smtp.gmail.com</prop>
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
                <prop key="mail.smtp.socketFactory.port">465</prop>-->

                <!--  outlook-->
<!--                <prop key="mail.smtp.port">${email.port}</prop>-->
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.smtp.auth">true</prop>
                <!--
                <prop key="mail.smtp.port">465</prop>
                <prop key="mail.smtp.socketFactory.port">465</prop>
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop> -->
            </props>
        </property>
    </bean>

    <!-- 邮件发送模板 -->
    <bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="${email.username}" />
    </bean>
    <!-- 配置发送模板bean -->
    <bean id="freeMarkerConfigurer"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPaths" value="classpath:email/ftl" /><!--
			模板路径位置 -->
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">1800</prop><!-- 模板更新延时 -->
                <prop key="default_encoding">UTF-8</prop>
                <prop key="locale">zh_CN</prop>
            </props>
        </property>
    </bean>

    <bean id="identifyingCodeService"
          class="project.user.idcode.internal.IdentifyingCodeServiceImpl">
        <property name="smsSendService" ref="smsSendService" />
        <property name="emailSendService" ref="emailSendService" />
        <property name="sysparaService" ref="sysparaService" />
        <property name="identifyingCodeTimeWindowService"
                  ref="identifyingCodeTimeWindowService" />
        <property name="blacklistIpTimeWindow"
                  ref="blacklistIpTimeWindow" />
        <property name="sendCountTimeWindow"
                  ref="sendCountTimeWindow" />
        <property name="codeLogService" ref="codeLogService" />
    </bean>

    <dubbo:service interface="project.user.idcode.IdentifyingCodeService" ref="identifyingCodeService" />

    <bean id="identifyingCodeTimeWindowService"
          class="project.user.idcode.IdentifyingCodeTimeWindow">
    </bean>

    <bean id="blacklistIpTimeWindow"
          class="project.user.idcode.BlacklistIpTimeWindow">
    </bean>
    <bean id="sendCountTimeWindow"
          class="project.user.idcode.SendCountTimeWindow">
    </bean>

    <dubbo:service interface="project.user.idcode.IdentifyingCodeTimeWindowService"
                   ref="identifyingCodeTimeWindowService" />

</beans>
